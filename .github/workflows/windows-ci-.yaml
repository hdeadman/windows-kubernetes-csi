name: Windows Kubernetes CSI
on:
  push:
    branches:
    - master

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "${{ github.repository }}-windows-pause"

jobs:

  build-containers:
    name: Build CSI Windows Images
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    defaults:
      run:
        shell: msys2 {0}
    strategy:
      matrix:
        windows_version: ["2019", "2022"]
    runs-on: "windows-${{ matrix.windows_version }}"
    steps:
    - name: Setup Msys2
      uses: msys2/setup-msys2@v2
      with:
        update: false
        path-type: inherit
        release: false
    - run: git config --global core.autocrlf input
    - name: Checkout
      uses: actions/checkout@v4
    - name: Docker Build
      id: docker_build
      run: |
        echo ${{ matrix.windows_version }}
        #csi-driver-smb livenessprobe node-driver-registrar
        CORE_VERSION=1.17.0
        IMAGE_NAME=csi-driver-smb
        echo "Building ${IMAGE_NAME} with ${CORE_VERSION}"
        docker build -f ${IMAGE_NAME}/Dockerfile.windows --build-arg OSVERSION=ltsc${{ matrix.windows_version }} --build-arg CORE_VERSION=${CORE_VERSION} --tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker push ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        #docker push dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}

        CORE_VERSION=2.15.0
        IMAGE_NAME=livenessprobe
        echo "Building ${IMAGE_NAME} with ${CORE_VERSION}"
        docker build -f ${IMAGE_NAME}/Dockerfile.windows --build-arg OSVERSION=ltsc${{ matrix.windows_version }} --build-arg CORE_VERSION=${CORE_VERSION} --tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker push ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        #docker push dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}

        CORE_VERSION=2.13.0
        IMAGE_NAME=node-driver-registrar
        echo "Building ${IMAGE_NAME} with ${CORE_VERSION}"
        docker build -f ${IMAGE_NAME}/Dockerfile.windows --build-arg OSVERSION=ltsc${{ matrix.windows_version }} --build-arg CORE_VERSION=${CORE_VERSION} --tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker tag ${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION} dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        docker push ${{ env.REGISTRY }}/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
        #docker push dtrajd/${IMAGE_NAME}:${{ matrix.windows_version }}-${CORE_VERSION}
    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
